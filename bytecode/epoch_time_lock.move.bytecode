// Move bytecode v6
module 2.epoch_time_lock {
use 0000000000000000000000000000000000000002::tx_context;


struct EpochTimeLock has copy, store {
	epoch: u64
}

public destroy(lock: EpochTimeLock, ctx: &TxContext) {
B0:
	0: MoveLoc[0](lock: EpochTimeLock)
	1: Unpack[0](EpochTimeLock)
	2: StLoc[2](epoch: u64)
	3: MoveLoc[1](ctx: &TxContext)
	4: Call tx_context::epoch(&TxContext): u64
	5: MoveLoc[2](epoch: u64)
	6: Ge
	7: BrFalse(9)
B1:
	8: Branch(11)
B2:
	9: LdConst[1](U64: [1, 0, 0, 0, 0, 0, 0, 0])
	10: Abort
B3:
	11: Ret
}
public(friend) destroy_unchecked(lock: EpochTimeLock) {
B0:
	0: MoveLoc[0](lock: EpochTimeLock)
	1: Unpack[0](EpochTimeLock)
	2: Pop
	3: Ret
}
public epoch(lock: &EpochTimeLock): u64 {
B0:
	0: MoveLoc[0](lock: &EpochTimeLock)
	1: ImmBorrowField[0](EpochTimeLock.epoch: u64)
	2: ReadRef
	3: Ret
}
public new(epoch: u64, ctx: &TxContext): EpochTimeLock {
B0:
	0: MoveLoc[1](ctx: &TxContext)
	1: Call tx_context::epoch(&TxContext): u64
	2: CopyLoc[0](epoch: u64)
	3: Lt
	4: BrFalse(6)
B1:
	5: Branch(8)
B2:
	6: LdConst[0](U64: [0, 0, 0, 0, 0, 0, 0, 0])
	7: Abort
B3:
	8: MoveLoc[0](epoch: u64)
	9: Pack[0](EpochTimeLock)
	10: Ret
}
}
